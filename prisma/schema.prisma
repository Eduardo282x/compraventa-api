generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id             Int        @id @default(autoincrement())
  companyName    String
  companyRuc     String
  companyPhone   String
  companyEmail   String
  companyAddress String
  createDate     DateTime   @default(now())
  Sucursal       Sucursal[]
}

model Sucursal {
  sucId     Int        @id @default(autoincrement())
  companyId Int
  nombre    String
  empresa   Empresa    @relation(fields: [companyId], references: [id])
  usuario   Usuario[]
  Producto  Producto[]
}

model Rol {
  id      Int       @id @default(autoincrement())
  rol     String
  usuario Usuario[]
}

model Usuario {
  id       Int      @id @default(autoincrement())
  sucId    Int
  rolId    Int
  name     String
  lastName String
  email    String
  password String
  status   Boolean  @default(true)
  sucursal Sucursal @relation(fields: [sucId], references: [sucId])
  rol      Rol      @relation(fields: [rolId], references: [id])
}

model Proveedor {
  id         Int      @id @default(autoincrement())
  name       String
  ruc        String   @db.VarChar(15)
  phone      String
  address    String
  email      String
  createDate DateTime @default(now())
  Store      Store[]
}

model Category {
  id       Int     @id @default(autoincrement())
  category String
  Store    Store[]
}

model Store {
  id             Int      @id @default(autoincrement())
  categoryId     Int
  name           String
  description    String?
  price          Decimal  @db.Decimal(18, 2)
  amount         Int      @default(0)
  expirationDate DateTime
  img            String?
  providerId     Int
  currencyId     Int
  unitId         Int
  unit           String
  createDate     DateTime @default(now())

  provider Proveedor  @relation(fields: [providerId], references: [id])
  category Category   @relation(fields: [categoryId], references: [id])
  Moneda   Moneda     @relation(fields: [currencyId], references: [id])
  unidad   Unidad     @relation(fields: [unitId], references: [id])
  Producto Producto[]
}

model Producto {
  id         Int @id @default(autoincrement())
  storeId    Int
  sucursalId Int
  amount     Int @default(0)

  store      Store        @relation(fields: [storeId], references: [id])
  sucursal   Sucursal     @relation(fields: [sucursalId], references: [sucId])
  carrito    Carrito[]
  DetPedidos DetPedidos[]
}

model Cliente {
  id             Int       @id @default(autoincrement())
  clientName     String
  clientLastName String
  clientRif      String
  clientPhone    String
  clientAddress  String
  clientEmail    String
  clientPassword String
  Carrito        Carrito[]
  Pedidos        Pedidos[]
}

model Carrito {
  id        Int      @id @default(autoincrement())
  productId Int
  amount    Int
  clientId  Int
  cliente   Cliente  @relation(fields: [clientId], references: [id])
  producto  Producto @relation(fields: [productId], references: [id])
}

model Pedidos {
  id         Int          @id @default(autoincrement())
  clientId   Int
  paymentId  Int
  status     String
  total      Int
  createDate DateTime     @default(now())
  cliente    Cliente      @relation(fields: [clientId], references: [id])
  payment    Payments     @relation(fields: [paymentId], references: [id])
  DetPedidos DetPedidos[]
}

model DetPedidos {
  id        Int      @id @default(autoincrement())
  orderId   Int
  pedidos   Pedidos  @relation(fields: [orderId], references: [id])
  productId Int
  amount    Int
  total     Int
  producto  Producto @relation(fields: [productId], references: [id])
}

model PaymentMethods {
  id         Int        @id @default(autoincrement())
  bank       String
  identify   String
  email      String
  phone      String
  owner      String
  type       String
  currencyId Int
  currency   Moneda     @relation(fields: [currencyId], references: [id])
  Payments   Payments[]
}

model Payments {
  id              Int            @id @default(autoincrement())
  namePayer       String
  lastNamePayer   String
  identifyPayer   String
  phonePayer      String
  emailPayer      String
  bankPayer       String
  reference       String
  pedidos         Pedidos[]
  methodPaymentId Int
  methodPayment   PaymentMethods @relation(fields: [methodPaymentId], references: [id])
}

model Moneda {
  id       Int              @id @default(autoincrement())
  currency String
  symbol   String
  Store    Store[]
  Pago     PaymentMethods[]
}

model Unidad {
  id    Int     @id @default(autoincrement())
  unit  String
  Store Store[]
}
