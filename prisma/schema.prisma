generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CompraDetalle {
  detcId      Int      @id @default(autoincrement())
  comprId     Int
  prodId      Int
  prodPcompra Decimal  @db.Decimal(18, 2)
  detcCant    Int
  detcTotal   Decimal  @db.Decimal(18, 2)
  fechCrea    DateTime @default(now())
  status      Boolean  @default(true)

  // Relaciones
  Compra   Compra   @relation(fields: [comprId], references: [comprId])
  Producto Producto @relation(fields: [prodId], references: [prodId])
}

model VentaDetalle {
  detvId     Int     @id @default(autoincrement())
  ventId     Int
  prodId     Int
  prodPventa Decimal @db.Decimal(18, 2)
  detvCant   Int
  detvTotal  Decimal @db.Decimal(18, 2)
  status     Boolean @default(true)

  // Relaciones
  Venta    Venta    @relation(fields: [ventId], references: [ventId])
  Producto Producto @relation(fields: [prodId], references: [prodId])
}

model Categoria {
  catId    Int        @id @default(autoincrement())
  sucId    Int
  sucursal Sucursal   @relation(fields: [sucId], references: [sucId])
  nombre   String
  // Relaciones
  Producto Producto[]
}

model Cliente {
  cliId        Int      @id @default(autoincrement())
  empId        Int
  cliNombre    String
  cliRif       String
  cliTelefono  String
  cliDireccion String
  cliCorreo    String
  fechCrea     DateTime @default(now())
  status       Boolean  @default(true)

  // Relaciones
  Venta Venta[]
}

model Compra {
  comprId       Int      @id @default(autoincrement())
  provId        Int
  comprSubtotal Decimal  @default(0.00) @db.Decimal(18, 2)
  comprIgv      Decimal  @default(0.00) @db.Decimal(18, 2)
  comprTotal    Decimal  @default(0.00) @db.Decimal(18, 2)
  fechCrea      DateTime @default(now())
  status        Boolean  @default(true)

  // Relaciones
  Proveedor     Proveedor       @relation(fields: [provId], references: [provId])
  CompraDetalle CompraDetalle[]
  Pago          Pago?           @relation(fields: [PagoPagId], references: [pagId])
  PagoPagId     Int?
}

model Documento {
  docId     Int      @id @default(autoincrement())
  docNombre String
  docTipo   String
  fechCrea  DateTime @default(now())

  // Relaciones
  Venta Venta[]
}

model Empresa {
  empId     Int      @id @default(autoincrement())
  empNom    String
  empRuc    String
  empCorreo String
  empTelf   String
  empDirecc String
  fechCrea  DateTime @default(now())
  status    Boolean  @default(true)

  // Relaciones
  Sucursal Sucursal[]
}

model Proveedor {
  provId     Int      @id @default(autoincrement())
  empId      Int
  provNom    String
  provRuc    String   @db.VarChar(15)
  provTelf   String
  provDirecc String
  provCorreo String
  fechCrea   DateTime @default(now())
  status     Boolean  @default(true)

  // Relaciones
  Compra Compra[]
}

model Rol {
  id  Int    @id @default(autoincrement())
  rol String

  // Relaciones
  Usuario Usuario[]
}

model Usuario {
  id          Int     @id @default(autoincrement())
  sucId       Int
  rolId       Int
  usuNombre   String
  usuApellido String
  usuCorreo   String
  usuPassword String
  status      Boolean @default(true)

  // Relaciones
  Sucursal Sucursal @relation(fields: [sucId], references: [sucId])
  Rol      Rol      @relation(fields: [rolId], references: [id])
}

model Producto {
  prodId        Int      @id @default(autoincrement())
  catId         Int
  prodNom       String
  prodDescrip   String?  @db.LongText
  prodPcompra   Decimal  @db.Decimal(18, 2)
  prodPventa    Decimal  @db.Decimal(18, 2)
  prodStock     Int      @default(0)
  prodFechaven  DateTime
  prodImg       String?  @db.LongText
  fechCrea      DateTime @default(now())
  status        Boolean  @default(true)
  MonedaMonId   Int?
  SucursalSucId Int?
  UnidadUndId   Int?

  // Relaciones
  CompraDetalle CompraDetalle[]
  VentaDetalle  VentaDetalle[]
  Categoria     Categoria       @relation(fields: [catId], references: [catId])
  Moneda        Moneda?         @relation(fields: [MonedaMonId], references: [monId])
  Sucursal      Sucursal?       @relation(fields: [SucursalSucId], references: [sucId])
  Unidad        Unidad?         @relation(fields: [UnidadUndId], references: [undId])
}

model Venta {
  ventId       Int      @id @default(autoincrement())
  cliId        Int
  ventSubtotal Decimal  @default(0.00) @db.Decimal(18, 2)
  ventIgv      Decimal  @default(0.00) @db.Decimal(18, 2)
  ventTotal    Decimal  @default(0.00) @db.Decimal(18, 2)
  fechCrea     DateTime @default(now())
  status       Boolean  @default(true)

  // Relaciones
  Cliente        Cliente        @relation(fields: [cliId], references: [cliId])
  VentaDetalle   VentaDetalle[]
  Documento      Documento?     @relation(fields: [DocumentoDocId], references: [docId])
  DocumentoDocId Int?
  Moneda         Moneda?        @relation(fields: [MonedaMonId], references: [monId])
  MonedaMonId    Int?
  Pago           Pago?          @relation(fields: [PagoPagId], references: [pagId])
  PagoPagId      Int?
}

model Pago {
  pagId    Int      @id @default(autoincrement())
  pagNom   String
  fechCrea DateTime @default(now())
  status   Boolean  @default(true)

  // Relaciones
  Compra Compra[]
  Venta  Venta[]
}

model Sucursal {
  sucId    Int      @id @default(autoincrement())
  empId    Int
  sucNom   String
  fechCrea DateTime @default(now())
  status   Boolean  @default(true)

  // Relaciones
  Empresa   Empresa     @relation(fields: [empId], references: [empId])
  Producto  Producto[]
  Usuario   Usuario[]
  Categoria Categoria[]
}

model Moneda {
  monId    Int      @id @default(autoincrement())
  monNom   String
  fechCrea DateTime @default(now())
  status   Boolean  @default(true)

  // Relaciones
  Producto Producto[]
  Venta    Venta[]
}

model Unidad {
  undId    Int      @id @default(autoincrement())
  undNom   String
  fechCrea DateTime @default(now())
  status   Boolean  @default(true)

  // Relaciones
  Producto Producto[]
}
